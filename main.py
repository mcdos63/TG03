import asyncio, aiohttp
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage

from config import *

logging.basicConfig(level=logging.INFO)
class Form(StatesGroup):
    name = State()
    age = State()
    grade = State()

bot = Bot(token=TOKEN)
dp = Dispatcher()


@dp.message(CommandStart())
async def start(message: Message, state: FSMContext):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    await state.set_state(Form.name)
@dp.message(Form.name)
async def name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
    await state.set_state(Form.age)
@dp.message(Form.age)
async def age(message: Message, state: FSMContext):
    await state.update_data(age=message.text)
    await message.answer("–í –∫–∞–∫–æ–º –∫–ª–∞—Å—Å–µ —É—á–∏—à—å—Å—è?")
    await state.set_state(Form.grade)
@dp.message(Form.grade)
async def grade(message: Message, state: FSMContext):
    await state.update_data(grade=message.text)
    user_data = await state.get_data()
    conn = sqlite3.connect('school_data.db')
    cur = conn.cursor()
    cur.execute("INSERT INTO users (name, age, grade) VALUES (?, ?, ?)", (user_data['name'], user_data['age'], user_data['grade']))
    conn.commit()
    conn.close()
    await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç—ã!\n")
    async with aiohttp.ClientSession() as session:
        weather_data = await get_weather()  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ get_weather() –≤ config.py
        weather = weather_data['–æ–ø–∏—Å–∞–Ω–∏–µ']
        temperature = weather_data['—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞']
        humidity = weather_data['–≤–ª–∞–∂–Ω–æ—Å—Ç—å']
        weather_report = f"–ü–æ–≥–æ–¥–∞: {weather}, {temperature}, {humidity}"
        await message.answer(weather_report)
    await state.clear()


async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    print('ü§ñ –ë–æ—Ç –≤–∫–ª—é—á–µ–Ω!')
    while True:
        try:
            asyncio.run(main())
        except KeyboardInterrupt:
            print('üõë –ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º!')
            break
        except Exception as e:
            logging.error(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            # time.sleep(5)  # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    print('üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞...')
